{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getTimePeriods.ts","hooks/useAllowance.ts"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","useWeb3React","useLottery","useEffect","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","theme","colors","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","fetchBalance","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","onClick","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","allowance","useLotteryAllowance","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","justifyContent","height","fontWeight","ExpandableSectionButton","expanded","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","defaultProps","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","useWeb3","contract","getBep20Contract","aria-label","role","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","days","setAllowance","useCake","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency"],"mappings":"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","file":"static/js/7.6f3c2d7e.chunk.js","sourcesContent":["import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #b4b6b8 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@mozartfinance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button width=\"100%\" disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@mozartfinance/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@mozartfinance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@mozartfinance/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(440, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend PIANO to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@mozartfinance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@mozartfinance/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@mozartfinance/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@mozartfinance/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@mozartfinance/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@mozartfinance/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@mozartfinance/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#b4b6b8' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#751113', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#b4b6b8', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#751113', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@mozartfinance/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@mozartfinance/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(999, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n"],"sourceRoot":""}