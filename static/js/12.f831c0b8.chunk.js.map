{"version":3,"sources":["views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/Tooltip/Tooltip.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","Wrapper","styled","div","StyledLinkExternal","LinkExternal","theme","colors","text","primary","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","bold","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","depositFee","alignItems","mb","src","alt","width","height","flexDirection","split","variant","StyledTokenInput","input","isWarning","shadows","warning","inset","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","depositFeeBP","isBalanceZero","displayBalance","parseFloat","toFixed","style","position","pl","fontSize","toLocaleString","placeholder","scale","onClick","mr","color","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","ModalActions","disabled","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","HarvestAction","earnings","account","useWeb3React","onReward","useHarvest","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","background","Divider","borderColor","ExpandingWrapper","expanded","FarmCard","cakePrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","token","toLocaleLowerCase","liquidity","toNumber","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","apy","liquidityUrlPathParts","quoteToken","address","BASE_ADD_LIQUIDITY_URL","display","ApyButton","CardActionsContainer","ExpandableSectionButton","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","Amount","span","earned","textDisabled","Earned","amountEarned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","TooltipContent","tooltip","zIndices","modal","Tooltip","content","children","MultiplierWrapper","Multiplier","displayMultipler","toLowerCase","LiquidityWrapper","Liquidity","displayLiquidity","Number","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","userData","earningsBigNumber","BigNumber","usePriceCakeBusd","earningsBusd","multipliedBy","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","current","ml","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","apr","bsc","name","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","ref","row","original","scrollIntoView","behavior","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","InputWrapper","SearchInput","setToggled","inputEl","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","DropDownHeader","inputSecondary","DropDownListContainer","dropdown","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","options","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Header","gradients","bubblegum","Farms","path","pathname","useLocation","farmsLP","useFarms","query","setQuery","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","dispatch","useDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","stackedOnly","setStackedOnly","isActive","activeFarms","filter","inactiveFarms","stackedOnlyFarms","stackedInactiveFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","lpTotalInQuoteToken","quoteTokenPriceUsd","totalLiquidity","times","getFarmApy","poolWeight","lowercaseQuery","farmsStaked","rowData","farms","orderBy","slice","sortFarms","size","Page","checked","marginLeft","event","target","length","sort","b","exact","renderContent","aria-label","role","defaultProps"],"mappings":"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","file":"static/js/12.f831c0b8.chunk.js","sourcesContent":["export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APY: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    translationId: 999,\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@mozartfinance/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(354, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@mozartfinance/uikit'\nimport { CommunityTag, CoreTag, NoFeeTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n  depositFee?: number\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n  depositFee\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from \"bignumber.js\";\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  depositFeeBP?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  depositFeeBP = 0\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\"><Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      <Text fontSize=\"14px\"> {TranslateString(10001, 'Deposit Fee')}: {(depositFeeBP / 100)}%</Text>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl,depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  depositFeeBP\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} depositFeeBP={depositFeeBP} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@mozartfinance/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses  } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings} = useFarmUser(pid)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        depositFeeBP={depositFeeBP}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          PIANO\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@mozartfinance/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n  liquidity?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 32px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.token.symbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValueFormated = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'PIANO'\n\n  const farmAPY = farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return (\n    <FCard>\n      {farm.token.symbol === 'PIANO' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.token.symbol}\n        depositFee={farm.depositFeeBP}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n        <Flex justifyContent='space-between'>\n            <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n            <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n        </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} depositFeeBP={farm.depositFeeBP}/>\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useI18n from 'hooks/useI18n'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>{TranslateString(656, 'Loading...')}</AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@mozartfinance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n  depositFeeBP?: number\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid, depositFeeBP }) => {\n\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n        <Text bold>Deposit Fee: {depositFeeBP/100}%</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\n  const { account } = useWeb3React()\n  const amountEarned = account ? earnings : null\n\n  const displayBalance = amountEarned ? amountEarned.toLocaleString() : '?'\n  return <Amount earned={amountEarned}>{displayBalance}</Amount>\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface TooltipProps {\n  content: React.ReactNode\n}\n\nconst TooltipContent = styled.div`\n  background: ${({ theme }) => theme.tooltip.background};\n  padding: 16px;\n  border-radius: 16px;\n  color: ${({ theme }) => theme.tooltip.text};\n  width: max-content;\n  display: none;\n  padding: 16px;\n  max-height: 500px;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n  position: absolute;\n  bottom: calc(100% + 16px);\n  transform: translate(34px, 0);\n  right: 0;\n  max-width: 246px;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\n    bottom: 0;\n    position: absolute;\n    transform: translate(-34px, 9px);\n    right: 0;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\n    display: block;\n  }\n`\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\n  return (\n    <Container>\n      {children}\n      <TooltipContent>{content}</TooltipContent>\n    </Container>\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\n      <Tooltip\n        content={\n          <div>\n            {TranslateString(999, 'The multiplier represents the amount of PIANO rewards each farm gets.')}\n            <br />\n            <br />\n            {TranslateString(\n              999,\n              'For example, if a 1x farm was getting 1 PIANO per block, a 40x farm would be getting 40 PIANO per block.',\n            )}\n          </div>\n        }\n      >\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface LiquidityProps {\n  liquidity: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@mozartfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\n  const { account } = useWeb3React()\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceCakeBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>PIANO </Title>\n        <Subtle>{TranslateString(999, 'EARNED')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(562, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@mozartfinance/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport useI18n from 'hooks/useI18n'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({ pid, lpSymbol, lpAddresses, quoteToken, token, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} depositFeeBP={depositFeeBP} />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (rawStakedBalance) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\n            {TranslateString(999, 'Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text } from '@mozartfinance/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { communityFarms } from 'config/constants'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://bscscan.com/address/${lpAddress}`\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\n  const isCommunityFarm = communityFarms.includes(token.symbol)\n\n  return (\n    <Container>\n      <InfoContainer>\n        <StakeContainer>\n          <StyledLinkExternal href={`https://exchange.mozartfinance.io/#/add/${liquidityUrlPathParts}`}>\n            {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n          </StyledLinkExternal>\n        </StakeContainer>\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n        <TagsContainer>\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(736, 'APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} />\n        <StakedAction {...farm} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelToggled} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(736, 'APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\n                      >\n                        {React.createElement(cells[key], props[key])}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm}/>\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n}\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@mozartfinance/uikit'\nimport styled from 'styled-components'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          ref={inputEl}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@mozartfinance/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToogleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@mozartfinance/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@mozartfinance/uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { Farm } from 'state/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApy } from 'utils/apy'\nimport { orderBy } from 'lodash'\n\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Select, { OptionProps } from './components/Select/Select'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stackedOnly, setStackedOnly] = useState(false)\n  const isActive = !pathname.includes('history')\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const stackedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stackedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, (farm: FarmWithStakedValue) => farm.apy, 'desc')\n      case 'multiplier':\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !prices) {\n          return farm\n        }\n\n        const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apy = isActive ? getFarmApy(farm.poolWeight, cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apy, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          return farm.lpSymbol.toLowerCase().includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [cakePrice, prices, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  let farmsStaked = []\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = stackedOnly ? farmsList(stackedInactiveFarms) : farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n\n  const rowData = farmsStaked.map((farm) => {\n    const { token, quoteToken} = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n        depositFeeBP: farm.depositFeeBP\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {TranslateString(999, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\">\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'Hot',\n                    value: 'hot',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/mozart-flying.png\" alt=\"Mozart illustration\" width={300} height={300} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(999, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n"],"sourceRoot":""}